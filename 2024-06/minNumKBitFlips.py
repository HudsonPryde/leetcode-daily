from typing import List
from collections import deque

def minKBitFlips(nums: List[int], k: int) -> int:
  total_flips = 0
  current_flips = 0
  
  for i in range(len(nums)):
      if nums[i-k] == 2 and i >= k:
         current_flips -= 1
      if current_flips % 2 == nums[i]:
         if i + k > len(nums):
            return -1
         current_flips += 1
         total_flips += 1
         nums[i] = 2
      


  return total_flips


# print(minKBitFlips([1,0,1], 2))
# print(minKBitFlips([0,1,0], 1))
# print(minKBitFlips([0,0,0,1,0,1,1,0], 3), " expect: 3")
print(minKBitFlips([0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0], 5), " expect: 126")
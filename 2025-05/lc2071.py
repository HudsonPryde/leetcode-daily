from typing import List
from collections import deque

class Solution:
    def maxTaskAssign(self, tasks: List[int], workers: List[int], pills: int, strength: int) -> int:
        tasks.sort()
        workers.sort()
        n,m = len(tasks),len(workers)
        res = 0
        def helper(mid: int, pills: int):
            w = deque()
            j = m-1
            for i in range(mid-1,-1,-1):
                while j >= m-mid and workers[j] + strength >= tasks[i]:
                    w.appendleft(workers[j])
                    j -= 1
                if not w:
                    return False
                elif w[-1] >= tasks[i]:
                    w.pop()
                else:
                    if pills == 0:
                        return False
                    pills -= 1
                    w.popleft()
            return True

        l,r = 1,min(m,n)
        while l <= r:
            mid = (l+r)//2
            if helper(mid,pills):
                res = mid
                l = mid+1
            else:
                r = mid-1
        return res



            

        
# [10,10,10,20,30]
# [0,10,10,10,10,20]
# 2 10
# [5,5,8,9,9]
# [1,2,4,6,6]
s = Solution()
print(s.maxTaskAssign([3209,8573,7552,6940,2850,7836,5708,7773,5444,1027,5795,5209,9575,5932,5293,3716,3347,8955,8827,8139,6069,7723,3292,8499,1034,6321,6718,5217,9703,5351,5197,2111,9012,8756,1680,3811,5820,3304,5149,9451,2496,6835,9284,9636,5942,3374,9794,6983,7883,9984,4773,7009,5278,6199,3029,7015,9310,8913,8366,9478,9778,8732,6081,5656,9534,8784,5141,2403,5810,5010,4403,5489,2984,2019,5699,8896,8933,9683,1133,9772,5060,6592,5577,7110,2399,4046,6406,6053,2295,5394,2178,3655,6655,9943,4417,7791,7091,4701,9756,6782,8565,1840,5073,7654,1763,7841,6191,1928,6969,6210,2405,4197,4831,7783,7869,2500,5673,5986,1535,8153,4420,8459,4701,4258,1070,4420,8558,6094,9868,8609,2711,8753,5279,3956,4632,8815,7718,5062,8423,7624,5205,8887,1270,1150,5691,5764,6804,9968,7487,8742,2653,6121,3291,6538,8696,3611,7158,3925,2596,1769,6631,6877,9317,6782,1665,6094,1803,7119,9628,5482,5859,8833,4435,9590,3163,1545,8306,8622,6035,6585,1960,2065,2571,8381,7369,1540,9688,3253,7696,9983,9330,9893,5381,4088,5055,2676,1151,3531,4625,7355,8060,7764,7042,8776,1137,7029,6671,9315,4576,3593,9910,7183,4122,3000,2411,2576,8086,2688,6293,9599,6415,6123,9116,3214,1338,9558,8943,4042,3368,3104,9494,9457,6798,1810,7425,3260,2958,4083,9643,7692,4433,2929,8211,9633,3992,9640,7210,7676,9868,5371,4764,5518,3000,1609,1601,1965,4507,8371,5974,1963,7898,5525,6409,6948,1746,8314,1970,1457,9506,8388,5571,9548,6375,7025,8410,9548,7274,8001,7189,6355,6893,8921,3818,4654,7743,2409,9586,7857,4481,5384,1924,1779,7191,1183,1026,7222,1438,4524,5071,4368,1357,2322,9392,9310,8695,8337,7852,7325,5831,4970,9046,4248,8876,5576,2152,3799,1989,2725,7848,6400,9420,8734,8079,6592,6555,5267,4544,3205,6285,8856,3102,8866,8913,7637,1246,8164,8138,1504,7063,7293,5165,6362,9368,5949,5213,9820,6683,7293,8115,1042,8021,5993,2209,4227,6662,9766,5003,3695,9020,2305,8191,2590,8502,1713,3889,5870,2939,1005,3421,6714,5965,9037,1640,2670,8131,6305,2160,3528,6027,8835,2806,6858,5513,2729,3821,5571,8130,4737,4125,9387,9027,2615,5019,9639,2604,5880,3816,5380,4622,4351,6656,9545,9635,1765,8174,2040,6995,7779,8937,9275,8558,3443,8580,1990,9398,5226,9955,8523,5831,6142,4696,6167,4155,4125,7787,7244,3097,6174,3674,4541,2982,6755,2773,7043,5595,8500,4588,4489,3368,2407,2842,3052,6316,8937,7678,4781,9714],[2773,3651,4482,4558,3378,2843,3670,2436,4350,4598,1544,2237,3167,4044,2754,929,2827,1117,3991,1427,2057,813,1665,3166,1117,856,1516,3273,3918,2509,1772,2625,3146,3730,3280,2044,4640,604,736,2273,2914,2816,3981,3666,3493,625,3492,3648,1238,4256,2834,3463,3317,3676,1018,3732,1893,2232,845,4348,2676,2276,3685,2245,4409,4432,1521,2609,4290,3857,2429,2596,1081,2704,2869,2607,2611,4525,3647,1114,880,4858,3396,4847,4133,1780,4620,2939,2844,2658,4946,4097,2725,1166,4287,2680,4788,4476,2205,842,1367,4840,912,2412,4163,2932,4625,1306,3462,3916,829,2327,1492,4608,3454,2219,1316,1755,4850,2876,864,2109,2528,2874,4019,4260,3894,1122,3780,4893,3022,4635,2199,2464,1343,2925,3370,4654,2678,4966,2516,2860,4285,4557,2061,1236,580,2847,1836,1931,508,2035,4344,4145,4056,4422,719,4188,2628,2542,2292,3715,3756,2287,2018,2403,1319,2355,3120,770,4997,2417,3351,4640,3248,1924,2766,3544,2481,1683,2972,4116,4050,692,2965,4301,554,2679,1524,3897,4868,2769,1710,3902,3263,1149,4318,3377,792,2343,708,3580,3846,3929,1896,1653,3384,977,1923,4599,3397,2581,2736,3973,2639,1008,2084,1933,507,3445,2664,4941,3433,3000,588,4564,4465,2545,1272,685,832,1013,1199,4484,4830,3343,2448,2236,1701,562,2145,3986,1425,3961,2887,538,3975,2336,1640,3686,521,4574,3069,4926,2242,1464,1334,596,977,2731,2755,3801,3956,688,818,875,3064,3945,1129,4490,541,2905,1910,1774,4693,4597,1680,2722,1710,1929,4231,1361,1512,3448,1183,2326,1674,2602,4202,1978,4484,4596,1862,4448,974,2814,1135,2850,4649,1181,684,2264,4761,4634,4398,570,2528,3436,946,3012,1178,1693,995,1283,1953,1370,4818,2546,2412,2561,2623,1610,4237,1532,1344,3698,1504,4480,1970,4446,720,3418,3977,1639,4551,3257,4657,4853,2514,1963,3375,1083,3335,748,2973,4718,3533,2956,2099,1565,2769,3301,4087,506,1472,2845,932,1518,1736,2795,939,679,3483,2744,646,1058,3785,4518,4878,3807,2460,3842,2513,4692,1105,597,4101,3218,632,3321,1310,2811,3783,2289,2442,3905,1914,1140,1363,2075,1128,1378,1406,2676,1623,3380,3835,1744,4461,3133,3656,3406,2363,3204,2112,3646,924,4989,2461,4674,3694,4965,1576,3939,920,1002,4394,2240,2731,3406,4070,542,779,2551,828,4879,1988,660,2779,3093,4758,4584,3101,3893,3054,1047,3803,3090,1403,4157,4409,1816,2340,4934,3444,4132,4317,1164,1328,2039,884,3193,2509,4198,870,2025,3168,4583,4970,2719,797,4157,2711,4205,587,2553,3186,2863,1096,4471,2718,4199,2761,2871,3845,4557,4066,4291,4961,1876,3303,3439,4630,1861,1740,2172,3466,4977,1300,739,2629,4026,3126,3467],201,3292))